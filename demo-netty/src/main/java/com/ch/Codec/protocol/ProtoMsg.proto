// 版本
syntax = "proto3";
// 包名
//option java_package = "com.ch.Codec.protocol";
// 外部类名，同时是类名
option java_outer_classname = "ProtoMsg";

/**
 * protobuf 三个关键字required、optional、repeated的理解:
 *     required: 就是必须的意思，数据发送方和接收方都必须处理这个字段，不然还怎么通讯呢
 *     optional:
 */
enum HeadType {
    LOGIN_REQUEST = 0; //登录请求
    LOGIN_RESPONSE = 1; //登录响应
    LOGOUT_REQUEST = 2; //登出请求
    LOGOUT_RESPONSE = 3; //登出响应
    KEEPALIVE_REQUEST = 4; //心跳请求
    KEEPALIVE_RESPONSE = 5; //心跳响应
    MESSAGE_REQUEST = 6; //聊天消息请求
    MESSAGE_RESPONSE = 7; //聊天消息响应
    MESSAGE_NOTIFICATION = 8; //服务器通知
}

/*登录请求信息*/
message LoginRequest {
    string uid = 1; // 用户唯一 ID
    string deviceId = 2; // 设备 ID
    string token = 3; // 用户 token
    uint32 platform = 4; // 客户端平台 windows、mac、android、ios、web
    string appVersion = 5; // APP 版本号
}

/*登录响应*/
message LoginResponse {
    bool result = 1; //true 表示发送成功，false 表示发送失败
    uint32 code = 2; //错误码
    string info = 3; //错误描述
    uint32 expose = 4; //错误描述是否提示给用户:1 提示; 0 不提示
}

/*聊天响应*/
message MessageResponse {
    bool result = 1; //true 表示发送成功，false 表示发送失败
    uint32 code = 2; //错误码
    string info = 3; //错误描述
    uint32 expose = 4; //错误描述是否提示给用户:1 提示; 0 不提示
    bool lastBlock = 5; //是否为最后的应答
    fixed32 blockIndex = 6; //应答的序号
}

/*聊天响应*/
message MessageRequest {
    //消息id
    uint64 msg_id = 1;
    //发送方sessionId
    string from = 2;
    //接收方sessionId
    string to = 3;
    //时间戳(单位:毫秒)
    uint64 time = 4;
    //消息类型  1：纯文本  2：音频 3：视频 4：地理位置 5：其他
    uint32 msg_type = 5;
    //消息内容
    string content = 6;
    //多媒体地址
    string url = 8;
    //附加属性
    string property = 9;
    //发送者昵称
    string from_nick = 10;
    //附加的json串
    string json = 11;
}

/*通知消息*/
message MessageNotification {
    uint32 msg_type = 1;	//通知类型 1 上线 2 下线 ...
    bytes sender = 2;
    string json = 3;
    string timestamp = 4;
}

/*顶层消息*/
//顶层消息是一种嵌套消息，嵌套了各种类型消息
//内部的消息类型，全部使用optional字段
//根据消息类型 type的值，最多只有一个有效
message Message {
    HeadType type = 1; // 消息类型
    uint64 sequence = 2; // 序列号
    string sessionId = 3; // 会话 ID
    LoginRequest loginRequest = 4; // 登录请求
    LoginResponse loginResponse = 5; // 登录响应
    MessageRequest messageRequest = 6; // 聊天请求
    MessageResponse messageResponse = 7; // 聊天响应
    MessageNotification notification = 8; // 通知消息
}